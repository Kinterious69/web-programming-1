<!DOCTYPE html>
<html lang="en">
 <meta charset="UTF-8" />
 
 <meta name="viewport" content="width=device-width, initial-scale=1.0" />
 

<head>
    <title>Biginners Guide To Java</title>
    <link rel="stylesheet" href="assets/css/styles.css">

</head>


<body>
    <nav >
        <h1 class="highlight">Contents</h1>
      
        <a href="#intro">What is Java</a>
        <a href="#his">History of Java</a>
        <a href="#uses">what is Java used For</a>
        <a href="#based">What is Java-Based Upon</a>
        <a href="#editions">Editions in Java</a>
        <a href="#concepts">Java concepts and Features</a>
        <a href="#how">How to learn Java</a>
        <a href="#conclude">Conclusion</a>
      
      </nav>
      
  <main>
    <section id="intro" > 
    <h2>What is Java</h2>
    <p>Java is an object-oriented programming language used in distributed environments on the internet. 
    It is a high-level language that is also easy to read and understand. With it, developers can “write once, run anywhere” (WORA),
     meaning that the compiled Java code will run on all Java-compatible platforms without the need for recompilation.</p>
    </section> 





     <section id="his">   
        <h2>History of Java</h2>
        <p>James Gosling and Sun Microsystems invented the Java programming language in 1991.
           He had a single motto while creating the language: “Write once; run anywhere.” They first named this language Oak
           because of the oak tree outside Gosling’s office.  Later, the name changed to Green, then to Java Coffee, which was named 
           after the coffee from Indonesia, and eventually shortened to Java in 1995.</p>

     </section>


     <section id="uses">
       <h2>What is Java used for?</h2>
       <p> Java is widely used in web consoles, GUIs, web and mobile applications, game development, embedded systems, and desktop applications. 
         Apart from these, Java is also used to develop software for devices.  It is used not only in computers and mobile devices,
         but even in electronic devices like televisions, air conditioners, washing machines, and so on. Online registration forms, 
         banking apps, and shopping via the internet are all possible because of Java. </p>

     </section>

     <section id="based">
        <h2>What is Java Based Upon?</h2>
        <p>Java is based on C and C++. The first Java compiler was developed by Sun Microsystems and was written in C using some libraries from C++.
          Java files are converted to bit code format using a compiler that the Java interpreter then executes. 
           Java code runs on Java Virtual Machine (JVM)—the runtime environment. </p>

     </section>

     <section id="editions">
        <h2>Editions in Java</h2>
        <p>There are three editions in Java. Programmers can learn any of these editions based on the application they want to make. </p>


        <ul>

          <li>Java Standard Edition - Contains core libraries, like java.lang, java.util, etc. </li>
          <li>Java Enterprise Edition - Includes Java APIs, like JMS, EJB, JSPs/servlets, etc.</li>  
          <li>Java Micro Edition - This edition is used to program Java in cell phones, set-top boxes, handhelds, and so on. </li>  

        
            
        </ul>

        <p>  The most widely used edition in Java is Java SE (Standard Edition). 
            Java SE encompasses the basics of Java—most applications require Standard Edition . </p>


     </section>

     <section id="concepts">
        <h2>Java Concepts and Features</h2>
        <h2>Java Concepts</h2>
        <ul>
        <p>The essential concepts in Java are its object-oriented programming (OOPs) features. OOP simplifies
         software and application development as well as maintenance by providing some concepts such as: </p>

          
       <ul> 
            
      <li><strong>Object:</strong> Object is an element or an entity that has a state and behavior.
        For example, a dog can be considered an object with a color, a breed, and a name. It has 
           behaviors such as barking and eating.</li> 

      <li> <strong>Class:</strong> A class is a collection of multiple objects. It is a blueprint that can be used to create as many objects as you like. 
            Classes are used to organize code, just like how fruits, vegetables, and clinical products are divided into different 
            sections in a supermarket. </li>

     <li> <strong>Constructor:</strong> Constructor may look like a method, but it is not one. Its name is the same as the class name, 
            and it does not return any value.</li>
      <li> <strong>Inheritance:</strong> Inheritance is the concept where one class acquires the properties and the behaviors of the parent class.</li>

    <li><strong>Polymorphism:</strong> Polymorphism is the process of performing the same task in different ways. It lets programmers use the
     same word to mean different things in different contexts.</li>
                
            <li> <strong>Abstraction:</strong> Abstraction in Java is used to hide internal details and show only the relevant essential details.</li>

            <li><strong>Encapsulation:</strong> Binding or wrapping code and data together into a single unit (like a capsule) are known as encapsulation.
               A Java class is an example of encapsulation.
            </li>

             
             <ul>

                <h2>Java Features</h2>
                
                   

               </ul>


              <p> Java has several qualities and features, including:</p>

              <li> The simple syntax that is very easy to understand and learn </li> 
               <li>Java language is robust </li>
              <li> Eliminates errors that occur in the C and C++ languages </li>
              <li> Java comprises of features like garbage collectors and exception handling </li> 
               <li>As a portable language, Java can run on any platform </li>
              <li> Java is secure and can perform multitasking </li>
              <li> Java  is not as fast as C and C++, but it provides higher performance than any other language </li>
               

                </ul>


           <p>Now that we have discussed the different features of Java, let’s see the different components of the Java programming language.</p>
             
         <h2> Components of Java</h2>

         <p>   There are three main components of the Java programming language, including:  </p>

         <ol> 
            <li><strong>JVM:</strong></li> <p> The Java Virtual Machine or JVM is a platform-independent Java component that provides an environment 
                    for executing Java programs. 
                      So, JVM loads the code, validates the code, executes the code, and provides a runtime environment. </p>

            <li> <strong>JRE:</strong></li> <p> The Java Runtime Environment or JRE builds an environment in which the Java files can be run and executed.
                It is a software package that contains JVM along with Java class libraries and Java class loader </p>

            <li> <strong>JDK:</strong></li> <p> The Java Development Kit or JDK is a superset of JRE and is a software development environment used to
                develop Java applications and applets. The JDK includes a private JVM and a few other resources to finish the 
                development of a Java application.</p>

            </ol>




            <h2> Java OOPs Concepts</h2>
            
            <p> There are four main concepts of object-oriented programming (OOP), including:   </p>
            <ol class="ols">
            
           <li>  <strong>Abstraction </strong></li>
                <p>  Abstraction means showing the relevant details and hiding all the backend or internal details. 
                    In the example below, for a student to be admitted into the college, the relevant details asked 
                    will be the name, address, parent’s name, and high school marks. Details like favorite sports, 
                    food, or movies are not relevant  </p>


                    <img  src="assets/images/oops-command.jpg" alt="OOPs">



              <li> <strong>Encapsulation</strong> </li>
              <p>Encapsulation is similar to a capsule. The entire code and all of the data are bound together in a single unit. 
                All the methods and variables are stored under one class name, and the same class object can use it. </p>

                <img src="assets/images/encapsulation.jpg" alt="encapsulation">




                <li><strong>Polymorphism</strong></li>
                <p>Polymorphism means one task is performed in different ways. One function is used for different tasks.    
                 In the example below, Method draw() can be used in different places to draw different shapes, like a triangle, 
                 rectangle, or circle.</p>
                 <img src="assets/images/polymorphism.jpg" alt="polymorphism">




                 <li><strong>Inheritance</strong></li>
                 <p>When one class inherits certain properties and attributes of other classes, it is known as inheritance. 
                  There is always a superclass and a subclass. The subclass inherits attributes from the superclass. 
                  In the example below, the animal is a superclass that has attributes eat() and sleep().
                   Subclasses reptile, mammal, and human inherit these attributes.</p>
                    
                   <img src="assets/images/inheritence.jpg" alt="inheritance">



            </ol> 

            
            



     </section>


      <section id="how">
        <h2>How to Learn Java?</h2>

       <p> java is one of the most used programming languages, mainly because Java is naturally versatile, reliable, and compatible. 
        So, it’s the in-demand skill to have if you want to start a career in programming. Here are some tips to get started: </p>
          <ul>
            <li>   Start with the basics of Java programming (variables, data types, conditional statements, arrays, loops, functions) </li>
             
            <li> Read a book on Java Programming to understand the basic concepts</li>

            <li>Learn the advanced topics (object-oriented programming, inheritance,
             abstract class, Java interface, collections, abstract classes, exceptional handling, wrapper classes) </li>

             <li>Practice coding regularly to know to learn from experience</li>

            <li>Read articles and new documentation on Java to stay up to date</li>

          </ul>
          <p>Developers often ask themselves a question at some point in their career—Do I need a Java certification?</p>

          <p>Some employers do value certifications a lot. Earning a certification will help you grow in your career and earn more.</p>

          <p>Java professionals gain experience from working on projects across a range of industries. So, they learn about the needs
           of different sectors as well as how they work with developers. On the other hand, some employers value their employees more 
           if they have a Java certification because it adds value to the company</p>

           <p>There are four types of certification levels mentioned within Oracle’s Java certification path</p>

           <ul>
           <li> Oracle Certified Associate (OCA) </li>
        <li> Oracle Certified Professional (OCP) </li>
           <li> Oracle Certified Expert (OCE) </li>
            <li>Oracle Certified Master (OCM) </li>
             
           </ul>
           <p>Choose whichever is suitable for you. The main goal of the Oracle Java Certification exams is to test your
             knowledge and capabilities on prospective jobs 
             in the Java industry.  </p>


      </section>
     <section id="conclude">

        <h2>Conclusion</h2>
       
        <p>Almost everything we use in our day-to-day life is now connected to Java. Java programming   language continues 
            to be one of the top technologies in the industries, and the job demand is significantly high</p>


     </section>
    


  </main>




    
</body>

</html>